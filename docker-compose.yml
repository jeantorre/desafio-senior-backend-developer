services:
  backend:
    container_name: backend-desafio
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
      TZ: ${TZ}
      PGTZ: ${PGTZ}
    env_file:
      - .env.desafio
    volumes:
      - ./backend:/app
    user: "1000:1000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health/"]
      interval: 60s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: db-desafio
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
      PGTZ: ${PGTZ}
    env_file:
      - .env.desafio
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
